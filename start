#!/bin/bash

# This is the file that will eventually control all of th testing
# This file will push all the code to the nodes and then run the tests. 
# New code must be supported by this script

NUM_ARGS=1
USAGE="Usage: start {xml-test-file} "
USERS="blue"
UPDATE=1
FIND_NODES=0

if [ $# -ne $NUM_ARGS ]; then
    echo $USAGE
    exit 1
fi

TS=`date +"%T-%m-%d-%y"`
LOG_DIR="logs/$TS"
mkdir $LOG_DIR
LOG_FILE="$LOG_DIR/test.log"

# lets explore the network and see what is connected
if [ $FIND_NODES -gt 0 ]; then
    echo "finding nodes..."
    source scripts/get_hosts
    echo "Found nodes: $nodes"
fi

# lets push the code to the nodes
if [ $UPDATE -gt 0 ]; then
    echo "updating node's code"
    for node in $nodes; do
        ./scripts/sync $node
    done
    echo "done updating code"
fi

echo "Starting nodes..."
ids=""
echo $nodes
node_num=0
num_nodes=0

for node in $nodes; do
    num_nodes=`expr $num_nodes + 1`
done

for node in $nodes; do
    # Get the machines node number
    id=`ssh "$USERS@$node" hostname | cut -c6-`
    #ids="$ids$id "

    # Start the nodes
    echo "Starting node-$id as node: $node_num $num_nodes" #| tee $LOG_FILE

    # Assign the node a test number and start the node
    ssh "$USERS@$node" "./research/364d-udp/node_start $node_num $num_nodes"
    if [ $? -gt 0 ]; then
        echo "Failed to start node, check node logs"
        exit 1
    fi

    ids="$ids$node_num "
    node_num=`expr $node_num + 1` 
done
echo "nodes started: $ids" | tee $LOG_FILE

echo "Starting experiment."
python3 python/experiment_AP.py "$ids" "$LOG_DIR" #| tee $LOG_FILE
echo "Python testing completed"

echo "Shuttinf down and grabbing log files..."
for node in $nodes; do
    ssh "$USERS@$node" "./research/364d-udp/node_stop"
    rsync -v "blue@$node:/home/blue/logs/*.log" $LOG_DIR
done
echo "Done"

